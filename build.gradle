plugins {
	id 'com.diffplug.spotless' version '6.0.0'
	id 'com.github.node-gradle.node' version '3.1.1'
	id 'com.google.cloud.tools.jib' version '3.1.4'
	id 'org.springframework.boot' version '2.5.7'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
}

group = 'de.innovation-hub.prox'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.4")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
}

node {
	download = true

	version = '16.13.0'

	npmInstallCommand = "ci"
}

spotless {
	ratchetFrom 'origin/main'
	encoding 'UTF-8'

	freshmark {
		target '*.md'
	}
	java {
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()

		googleJavaFormat('1.13.0')
	}
	groovyGradle {
		target '*.gradle'
		greclipse('4.21.0')
	}
	format 'styling', {
		target '*.js', '*.ts', '*.css', '*.scss', '*.json', '*.md', '*.html', '*.yml', '*.yaml', '*.sql'
		prettier('2.5.0').config([
			'tabWidth': 2
		])
	}
}

jib {
	from {
		image = 'eclipse-temurin:17-jdk-alpine'
	}
	to {
		image = 'quay.io/innovation-hub-bergisches-rheinland/' + project.name
		tags = [project.version, 'latest']
	}
}

/*
 * The gradle-semantic-release-plugin leverages artifact publishing by using the particular
 * plugin tasks for example the publish task of the Maven Publish Plugin. This task is required
 * in order to work with the gradle-semantic-release-plugin. However, as of now we do not publish
 * artifacts (although it might be the cleanest way). We just want the plugin to bump the gradle
 * version.
 */
task publish(type: DefaultTask) {
	group = 'publish'
	description = 'Dummy publish to pass the verification phase of the gradle-semantic-release-plugin'
}

defaultTasks 'spotlessApply', 'build'