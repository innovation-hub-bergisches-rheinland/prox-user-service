plugins {
	id "com.diffplug.spotless" version "6.2.1"
	id "com.github.ben-manes.versions" version "0.42.0"
	id "com.github.node-gradle.node" version "3.1.1"
	// Provides task metadata and dependency information
	id "org.barfuin.gradle.taskinfo" version "1.3.1"
	id "org.sonarqube" version "3.3"
	// id "io.freefair.lombok" version "6.3.0"
	id "jacoco"
	id "idea"
	id "java"
	id "io.quarkus"
}

repositories {
	mavenLocal()
	mavenCentral()
}

group = "de.innovationhub.prox.userservice"
version = file("version.txt").text.trim()

ext {
	apacheCommonsVersion = "3.11"
	mapstructVersion = "1.4.2.Final"
	assertJVersion = "3.22.0"
	junitVersion = "5.8.2"
	lombokVersion = "1.18.22"
	mockitoVersion = "4.3.1"
	restAssuredVersion = "4.5.0"
	easyRandomVersion = "5.0.0"
}

dependencies {
	// Quarkus Extensions
	implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
	implementation("io.quarkus:quarkus-resteasy-jackson")
	implementation("io.quarkus:quarkus-hibernate-orm")
	implementation("io.quarkus:quarkus-flyway")
	implementation("io.quarkus:quarkus-hibernate-validator")
	implementation("io.quarkus:quarkus-smallrye-openapi")
	implementation("io.quarkus:quarkus-resteasy")
	implementation("io.quarkus:quarkus-hibernate-orm-panache")
	implementation("io.quarkus:quarkus-jdbc-postgresql")
	implementation("io.quarkus:quarkus-arc")
	implementation("io.quarkus:quarkus-container-image-jib")
	implementation("io.quarkus:quarkus-oidc")
	implementation("io.quarkus:quarkus-keycloak-admin-client")
	implementation("io.quarkus:quarkus-cache")
	implementation("io.quarkus:quarkus-kubernetes-config")
	implementation("io.quarkus:quarkus-smallrye-health")
  implementation("io.quarkus:quarkus-smallrye-reactive-messaging")
  implementation("io.quarkus:quarkus-smallrye-reactive-messaging-kafka")
	implementation("software.amazon.awssdk:url-connection-client:2.17.148")
	implementation("io.quarkiverse.amazonservices:quarkus-amazon-s3:1.0.4")


	testImplementation("io.quarkus:quarkus-junit5")
	testImplementation("io.quarkus:quarkus-test-oidc-server")
	testImplementation("io.quarkus:quarkus-test-security-jwt")
	testImplementation("io.quarkus:quarkus-test-security-oidc")
	testImplementation("io.quarkus:quarkus-test-keycloak-server")
	testImplementation("io.quarkus:quarkus-junit5-mockito")
  testImplementation("io.quarkus:quarkus-test-kafka-companion")

	// Others
	implementation("org.apache.commons:commons-lang3:${apacheCommonsVersion}")
	implementation("org.mapstruct:mapstruct:${mapstructVersion}")

	compileOnly("org.projectlombok:lombok:${lombokVersion}")

	annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
	annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

	testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"
	testImplementation("org.junit.jupiter:junit-jupiter:${junitVersion}")
	testImplementation("org.assertj:assertj-core:${assertJVersion}")
	testImplementation("org.mockito:mockito-core:${mockitoVersion}")
	testImplementation("org.mockito:mockito-junit-jupiter:${mockitoVersion}")
	testImplementation("org.jeasy:easy-random-core:${easyRandomVersion}")
	testImplementation("org.jeasy:easy-random-bean-validation:${easyRandomVersion}") {
		exclude group: "org.yaml", module: "snakeyaml"
	}
}

// -------------
// JAVA
// -------------

sourceSets {
	main {
		resources {
			srcDirs += ["src/config"]
		}
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

compileJava {
	options.encoding = "UTF-8"
	options.compilerArgs << "-parameters"
}

compileTestJava {
	options.encoding = "UTF-8"
}

// -------------
// JACOCO / TESTING
// -------------

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	reports {
		xml.required = true
	}
	// dependsOn test
}

// -------------
// NODE
// -------------

node {
	download = true

	version = "16.13.0"

	npmInstallCommand = "ci"
}

// -------------
// IDEA
// -------------

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

// -------------
// SPOTLESS
// -------------

spotless {
	encoding "UTF-8"

	java {
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()

		googleJavaFormat("1.13.0")
	}
	groovyGradle {
		target "*.gradle"
		greclipse("4.21.0")
	}
}

// Disable the spotlessCheck - We"re checking manually in the Pipeline or separate task
tasks.spotlessCheck.enabled = false

// -------------
// SONARQUBE
// -------------

tasks.named("sonarqube").configure {
	dependsOn test
}

sonarqube {
	properties {
		property "sonar.projectKey", "innovation-hub-bergisches-rheinland_prox-user-service"
		property "sonar.organization", "innovation-hub-bergisches-rheinland"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

defaultTasks "spotlessApply", "build"
